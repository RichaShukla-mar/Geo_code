<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd  http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd">
	
	<jee:jndi-lookup id="environment_properties" jndi-name="FCT_ENVIRONMENT_CONFIG_LOCATION" />
		
	<context:annotation-config />
	<context:component-scan base-package="net.apmoller.**" />
<!-- 	<context:property-placeholder location="file:///${environment_properties)" /> -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
   <property name="location" ref="environment_properties"/>
  
</bean>

	<bean id="mqConnectionFactory" class="com.ibm.mq.jms.MQConnectionFactory">
		<property name="queueManager" value="${mq.qManager}" />
		<property name="connectionNameList" value="${mq.clhosts}" />
		<property name="channel" value="${mq.channel}" />
		<property name="clientID" value="cmd_geoservice_client" />
		<property name="transportType" value="1" />
	</bean>

	<bean id="userConnectionFactory"
		class="org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter">
		<property name="targetConnectionFactory" ref="mqConnectionFactory" />
		<property name="username" value="${mq.username:#{null}}" />
		<property name="password" value="${mq.password:#{null}}" />
	</bean>

	<!-- this will work -->
	<bean id="connectionFactory"
		class="org.springframework.jms.connection.CachingConnectionFactory">
		<property name="targetConnectionFactory" ref="userConnectionFactory" />
		<property name="cacheConsumers" value="true" />
		<property name="reconnectOnException" value="true" />
	</bean>	

	<bean id="messageDestination" class="com.ibm.mq.jms.MQQueue">
		<constructor-arg value="${publish.facility.service.mq.publishQName}" />
		<property name="persistence">
			<value>1</value>
		</property>
	</bean>
	
	<!-- A JmsTemplate instance that uses the cached connection and destination -->
	<bean id="producerTemplate" class="org.springframework.jms.core.JmsTemplate"
		p:connectionFactory-ref="connectionFactory" p:defaultDestination-ref="messageDestination" />
		
	<bean id="jmsMessageListener" class="net.apmoller.maersk.services.fct.geowrite.messaging.JmsMessageListener"/>

	<!-- ============================================================= -->
	<!-- JMS Receiveï¼ŒDefine MessageListenerContainer -->
	<!-- ============================================================= -->
	<bean id="messageListenerContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory"/>
		<property name="destinationName" value="${publish.facility.service.mq.publishQName}"/>
		<property name="messageListener" ref="jmsMessageListener"/>
		<property name="maxConcurrentConsumers" value="${publish.facility.service.mq.maxConcurrencyLevel}" />
		<property name="concurrentConsumers" value="${publish.facility.service.mq.minConcurrencyLevel}" />
	</bean>




</beans>