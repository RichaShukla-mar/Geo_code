/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.maersk.OpsFacility.smds.operations.MSK;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Ops FacilityServices details */
@org.apache.avro.specific.AvroGenerated
public class OpsFacilityServices extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4151553169968951807L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OpsFacilityServices\",\"namespace\":\"com.maersk.OpsFacility.smds.operations.MSK\",\"doc\":\"Ops FacilityServices details\",\"fields\":[{\"name\":\"ServiceName\",\"type\":[\"null\",\"string\"]},{\"name\":\"ServiceCode\",\"type\":[\"null\",\"string\"]},{\"name\":\"ServiceDescription\",\"type\":[\"null\",\"string\"]},{\"name\":\"ValidThroughDate\",\"type\":[\"null\",\"string\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<OpsFacilityServices> ENCODER =
      new BinaryMessageEncoder<OpsFacilityServices>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<OpsFacilityServices> DECODER =
      new BinaryMessageDecoder<OpsFacilityServices>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<OpsFacilityServices> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<OpsFacilityServices> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<OpsFacilityServices>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this OpsFacilityServices to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a OpsFacilityServices from a ByteBuffer. */
  public static OpsFacilityServices fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence ServiceName;
  @Deprecated public java.lang.CharSequence ServiceCode;
  @Deprecated public java.lang.CharSequence ServiceDescription;
  @Deprecated public java.lang.CharSequence ValidThroughDate;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public OpsFacilityServices() {}

  /**
   * All-args constructor.
   * @param ServiceName The new value for ServiceName
   * @param ServiceCode The new value for ServiceCode
   * @param ServiceDescription The new value for ServiceDescription
   * @param ValidThroughDate The new value for ValidThroughDate
   */
  public OpsFacilityServices(java.lang.CharSequence ServiceName, java.lang.CharSequence ServiceCode, java.lang.CharSequence ServiceDescription, java.lang.CharSequence ValidThroughDate) {
    this.ServiceName = ServiceName;
    this.ServiceCode = ServiceCode;
    this.ServiceDescription = ServiceDescription;
    this.ValidThroughDate = ValidThroughDate;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ServiceName;
    case 1: return ServiceCode;
    case 2: return ServiceDescription;
    case 3: return ValidThroughDate;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ServiceName = (java.lang.CharSequence)value$; break;
    case 1: ServiceCode = (java.lang.CharSequence)value$; break;
    case 2: ServiceDescription = (java.lang.CharSequence)value$; break;
    case 3: ValidThroughDate = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'ServiceName' field.
   * @return The value of the 'ServiceName' field.
   */
  public java.lang.CharSequence getServiceName() {
    return ServiceName;
  }

  /**
   * Sets the value of the 'ServiceName' field.
   * @param value the value to set.
   */
  public void setServiceName(java.lang.CharSequence value) {
    this.ServiceName = value;
  }

  /**
   * Gets the value of the 'ServiceCode' field.
   * @return The value of the 'ServiceCode' field.
   */
  public java.lang.CharSequence getServiceCode() {
    return ServiceCode;
  }

  /**
   * Sets the value of the 'ServiceCode' field.
   * @param value the value to set.
   */
  public void setServiceCode(java.lang.CharSequence value) {
    this.ServiceCode = value;
  }

  /**
   * Gets the value of the 'ServiceDescription' field.
   * @return The value of the 'ServiceDescription' field.
   */
  public java.lang.CharSequence getServiceDescription() {
    return ServiceDescription;
  }

  /**
   * Sets the value of the 'ServiceDescription' field.
   * @param value the value to set.
   */
  public void setServiceDescription(java.lang.CharSequence value) {
    this.ServiceDescription = value;
  }

  /**
   * Gets the value of the 'ValidThroughDate' field.
   * @return The value of the 'ValidThroughDate' field.
   */
  public java.lang.CharSequence getValidThroughDate() {
    return ValidThroughDate;
  }

  /**
   * Sets the value of the 'ValidThroughDate' field.
   * @param value the value to set.
   */
  public void setValidThroughDate(java.lang.CharSequence value) {
    this.ValidThroughDate = value;
  }

  /**
   * Creates a new OpsFacilityServices RecordBuilder.
   * @return A new OpsFacilityServices RecordBuilder
   */
  public static com.maersk.OpsFacility.smds.operations.MSK.OpsFacilityServices.Builder newBuilder() {
    return new com.maersk.OpsFacility.smds.operations.MSK.OpsFacilityServices.Builder();
  }

  /**
   * Creates a new OpsFacilityServices RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new OpsFacilityServices RecordBuilder
   */
  public static com.maersk.OpsFacility.smds.operations.MSK.OpsFacilityServices.Builder newBuilder(com.maersk.OpsFacility.smds.operations.MSK.OpsFacilityServices.Builder other) {
    return new com.maersk.OpsFacility.smds.operations.MSK.OpsFacilityServices.Builder(other);
  }

  /**
   * Creates a new OpsFacilityServices RecordBuilder by copying an existing OpsFacilityServices instance.
   * @param other The existing instance to copy.
   * @return A new OpsFacilityServices RecordBuilder
   */
  public static com.maersk.OpsFacility.smds.operations.MSK.OpsFacilityServices.Builder newBuilder(com.maersk.OpsFacility.smds.operations.MSK.OpsFacilityServices other) {
    return new com.maersk.OpsFacility.smds.operations.MSK.OpsFacilityServices.Builder(other);
  }

  /**
   * RecordBuilder for OpsFacilityServices instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OpsFacilityServices>
    implements org.apache.avro.data.RecordBuilder<OpsFacilityServices> {

    private java.lang.CharSequence ServiceName;
    private java.lang.CharSequence ServiceCode;
    private java.lang.CharSequence ServiceDescription;
    private java.lang.CharSequence ValidThroughDate;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.maersk.OpsFacility.smds.operations.MSK.OpsFacilityServices.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.ServiceName)) {
        this.ServiceName = data().deepCopy(fields()[0].schema(), other.ServiceName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.ServiceCode)) {
        this.ServiceCode = data().deepCopy(fields()[1].schema(), other.ServiceCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ServiceDescription)) {
        this.ServiceDescription = data().deepCopy(fields()[2].schema(), other.ServiceDescription);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.ValidThroughDate)) {
        this.ValidThroughDate = data().deepCopy(fields()[3].schema(), other.ValidThroughDate);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing OpsFacilityServices instance
     * @param other The existing instance to copy.
     */
    private Builder(com.maersk.OpsFacility.smds.operations.MSK.OpsFacilityServices other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.ServiceName)) {
        this.ServiceName = data().deepCopy(fields()[0].schema(), other.ServiceName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.ServiceCode)) {
        this.ServiceCode = data().deepCopy(fields()[1].schema(), other.ServiceCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ServiceDescription)) {
        this.ServiceDescription = data().deepCopy(fields()[2].schema(), other.ServiceDescription);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.ValidThroughDate)) {
        this.ValidThroughDate = data().deepCopy(fields()[3].schema(), other.ValidThroughDate);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'ServiceName' field.
      * @return The value.
      */
    public java.lang.CharSequence getServiceName() {
      return ServiceName;
    }

    /**
      * Sets the value of the 'ServiceName' field.
      * @param value The value of 'ServiceName'.
      * @return This builder.
      */
    public com.maersk.OpsFacility.smds.operations.MSK.OpsFacilityServices.Builder setServiceName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.ServiceName = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'ServiceName' field has been set.
      * @return True if the 'ServiceName' field has been set, false otherwise.
      */
    public boolean hasServiceName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'ServiceName' field.
      * @return This builder.
      */
    public com.maersk.OpsFacility.smds.operations.MSK.OpsFacilityServices.Builder clearServiceName() {
      ServiceName = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'ServiceCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getServiceCode() {
      return ServiceCode;
    }

    /**
      * Sets the value of the 'ServiceCode' field.
      * @param value The value of 'ServiceCode'.
      * @return This builder.
      */
    public com.maersk.OpsFacility.smds.operations.MSK.OpsFacilityServices.Builder setServiceCode(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.ServiceCode = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'ServiceCode' field has been set.
      * @return True if the 'ServiceCode' field has been set, false otherwise.
      */
    public boolean hasServiceCode() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'ServiceCode' field.
      * @return This builder.
      */
    public com.maersk.OpsFacility.smds.operations.MSK.OpsFacilityServices.Builder clearServiceCode() {
      ServiceCode = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'ServiceDescription' field.
      * @return The value.
      */
    public java.lang.CharSequence getServiceDescription() {
      return ServiceDescription;
    }

    /**
      * Sets the value of the 'ServiceDescription' field.
      * @param value The value of 'ServiceDescription'.
      * @return This builder.
      */
    public com.maersk.OpsFacility.smds.operations.MSK.OpsFacilityServices.Builder setServiceDescription(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.ServiceDescription = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'ServiceDescription' field has been set.
      * @return True if the 'ServiceDescription' field has been set, false otherwise.
      */
    public boolean hasServiceDescription() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'ServiceDescription' field.
      * @return This builder.
      */
    public com.maersk.OpsFacility.smds.operations.MSK.OpsFacilityServices.Builder clearServiceDescription() {
      ServiceDescription = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'ValidThroughDate' field.
      * @return The value.
      */
    public java.lang.CharSequence getValidThroughDate() {
      return ValidThroughDate;
    }

    /**
      * Sets the value of the 'ValidThroughDate' field.
      * @param value The value of 'ValidThroughDate'.
      * @return This builder.
      */
    public com.maersk.OpsFacility.smds.operations.MSK.OpsFacilityServices.Builder setValidThroughDate(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.ValidThroughDate = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'ValidThroughDate' field has been set.
      * @return True if the 'ValidThroughDate' field has been set, false otherwise.
      */
    public boolean hasValidThroughDate() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'ValidThroughDate' field.
      * @return This builder.
      */
    public com.maersk.OpsFacility.smds.operations.MSK.OpsFacilityServices.Builder clearValidThroughDate() {
      ValidThroughDate = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public OpsFacilityServices build() {
      try {
        OpsFacilityServices record = new OpsFacilityServices();
        record.ServiceName = fieldSetFlags()[0] ? this.ServiceName : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.ServiceCode = fieldSetFlags()[1] ? this.ServiceCode : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.ServiceDescription = fieldSetFlags()[2] ? this.ServiceDescription : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.ValidThroughDate = fieldSetFlags()[3] ? this.ValidThroughDate : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<OpsFacilityServices>
    WRITER$ = (org.apache.avro.io.DatumWriter<OpsFacilityServices>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<OpsFacilityServices>
    READER$ = (org.apache.avro.io.DatumReader<OpsFacilityServices>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
