/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.maersk.facility.smds.operations.MSK;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Facility OpeningHours */
@org.apache.avro.specific.AvroGenerated
public class openingHours extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2656632501347199534L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"openingHours\",\"namespace\":\"com.maersk.facility.smds.operations.MSK\",\"doc\":\"Facility OpeningHours\",\"fields\":[{\"name\":\"day\",\"type\":[\"null\",\"string\"]},{\"name\":\"openTimeHours\",\"type\":[\"null\",\"string\"]},{\"name\":\"openTimeMinutes\",\"type\":[\"null\",\"string\"]},{\"name\":\"closeTimeHours\",\"type\":[\"null\",\"string\"]},{\"name\":\"closeTimeMinutes\",\"type\":[\"null\",\"string\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<openingHours> ENCODER =
      new BinaryMessageEncoder<openingHours>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<openingHours> DECODER =
      new BinaryMessageDecoder<openingHours>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<openingHours> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<openingHours> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<openingHours>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this openingHours to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a openingHours from a ByteBuffer. */
  public static openingHours fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence day;
  @Deprecated public java.lang.CharSequence openTimeHours;
  @Deprecated public java.lang.CharSequence openTimeMinutes;
  @Deprecated public java.lang.CharSequence closeTimeHours;
  @Deprecated public java.lang.CharSequence closeTimeMinutes;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public openingHours() {}

  /**
   * All-args constructor.
   * @param day The new value for day
   * @param openTimeHours The new value for openTimeHours
   * @param openTimeMinutes The new value for openTimeMinutes
   * @param closeTimeHours The new value for closeTimeHours
   * @param closeTimeMinutes The new value for closeTimeMinutes
   */
  public openingHours(java.lang.CharSequence day, java.lang.CharSequence openTimeHours, java.lang.CharSequence openTimeMinutes, java.lang.CharSequence closeTimeHours, java.lang.CharSequence closeTimeMinutes) {
    this.day = day;
    this.openTimeHours = openTimeHours;
    this.openTimeMinutes = openTimeMinutes;
    this.closeTimeHours = closeTimeHours;
    this.closeTimeMinutes = closeTimeMinutes;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return day;
    case 1: return openTimeHours;
    case 2: return openTimeMinutes;
    case 3: return closeTimeHours;
    case 4: return closeTimeMinutes;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: day = (java.lang.CharSequence)value$; break;
    case 1: openTimeHours = (java.lang.CharSequence)value$; break;
    case 2: openTimeMinutes = (java.lang.CharSequence)value$; break;
    case 3: closeTimeHours = (java.lang.CharSequence)value$; break;
    case 4: closeTimeMinutes = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'day' field.
   * @return The value of the 'day' field.
   */
  public java.lang.CharSequence getDay() {
    return day;
  }

  /**
   * Sets the value of the 'day' field.
   * @param value the value to set.
   */
  public void setDay(java.lang.CharSequence value) {
    this.day = value;
  }

  /**
   * Gets the value of the 'openTimeHours' field.
   * @return The value of the 'openTimeHours' field.
   */
  public java.lang.CharSequence getOpenTimeHours() {
    return openTimeHours;
  }

  /**
   * Sets the value of the 'openTimeHours' field.
   * @param value the value to set.
   */
  public void setOpenTimeHours(java.lang.CharSequence value) {
    this.openTimeHours = value;
  }

  /**
   * Gets the value of the 'openTimeMinutes' field.
   * @return The value of the 'openTimeMinutes' field.
   */
  public java.lang.CharSequence getOpenTimeMinutes() {
    return openTimeMinutes;
  }

  /**
   * Sets the value of the 'openTimeMinutes' field.
   * @param value the value to set.
   */
  public void setOpenTimeMinutes(java.lang.CharSequence value) {
    this.openTimeMinutes = value;
  }

  /**
   * Gets the value of the 'closeTimeHours' field.
   * @return The value of the 'closeTimeHours' field.
   */
  public java.lang.CharSequence getCloseTimeHours() {
    return closeTimeHours;
  }

  /**
   * Sets the value of the 'closeTimeHours' field.
   * @param value the value to set.
   */
  public void setCloseTimeHours(java.lang.CharSequence value) {
    this.closeTimeHours = value;
  }

  /**
   * Gets the value of the 'closeTimeMinutes' field.
   * @return The value of the 'closeTimeMinutes' field.
   */
  public java.lang.CharSequence getCloseTimeMinutes() {
    return closeTimeMinutes;
  }

  /**
   * Sets the value of the 'closeTimeMinutes' field.
   * @param value the value to set.
   */
  public void setCloseTimeMinutes(java.lang.CharSequence value) {
    this.closeTimeMinutes = value;
  }

  /**
   * Creates a new openingHours RecordBuilder.
   * @return A new openingHours RecordBuilder
   */
  public static com.maersk.facility.smds.operations.MSK.openingHours.Builder newBuilder() {
    return new com.maersk.facility.smds.operations.MSK.openingHours.Builder();
  }

  /**
   * Creates a new openingHours RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new openingHours RecordBuilder
   */
  public static com.maersk.facility.smds.operations.MSK.openingHours.Builder newBuilder(com.maersk.facility.smds.operations.MSK.openingHours.Builder other) {
    return new com.maersk.facility.smds.operations.MSK.openingHours.Builder(other);
  }

  /**
   * Creates a new openingHours RecordBuilder by copying an existing openingHours instance.
   * @param other The existing instance to copy.
   * @return A new openingHours RecordBuilder
   */
  public static com.maersk.facility.smds.operations.MSK.openingHours.Builder newBuilder(com.maersk.facility.smds.operations.MSK.openingHours other) {
    return new com.maersk.facility.smds.operations.MSK.openingHours.Builder(other);
  }

  /**
   * RecordBuilder for openingHours instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<openingHours>
    implements org.apache.avro.data.RecordBuilder<openingHours> {

    private java.lang.CharSequence day;
    private java.lang.CharSequence openTimeHours;
    private java.lang.CharSequence openTimeMinutes;
    private java.lang.CharSequence closeTimeHours;
    private java.lang.CharSequence closeTimeMinutes;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.maersk.facility.smds.operations.MSK.openingHours.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.day)) {
        this.day = data().deepCopy(fields()[0].schema(), other.day);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.openTimeHours)) {
        this.openTimeHours = data().deepCopy(fields()[1].schema(), other.openTimeHours);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.openTimeMinutes)) {
        this.openTimeMinutes = data().deepCopy(fields()[2].schema(), other.openTimeMinutes);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.closeTimeHours)) {
        this.closeTimeHours = data().deepCopy(fields()[3].schema(), other.closeTimeHours);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.closeTimeMinutes)) {
        this.closeTimeMinutes = data().deepCopy(fields()[4].schema(), other.closeTimeMinutes);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing openingHours instance
     * @param other The existing instance to copy.
     */
    private Builder(com.maersk.facility.smds.operations.MSK.openingHours other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.day)) {
        this.day = data().deepCopy(fields()[0].schema(), other.day);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.openTimeHours)) {
        this.openTimeHours = data().deepCopy(fields()[1].schema(), other.openTimeHours);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.openTimeMinutes)) {
        this.openTimeMinutes = data().deepCopy(fields()[2].schema(), other.openTimeMinutes);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.closeTimeHours)) {
        this.closeTimeHours = data().deepCopy(fields()[3].schema(), other.closeTimeHours);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.closeTimeMinutes)) {
        this.closeTimeMinutes = data().deepCopy(fields()[4].schema(), other.closeTimeMinutes);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'day' field.
      * @return The value.
      */
    public java.lang.CharSequence getDay() {
      return day;
    }

    /**
      * Sets the value of the 'day' field.
      * @param value The value of 'day'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.openingHours.Builder setDay(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.day = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'day' field has been set.
      * @return True if the 'day' field has been set, false otherwise.
      */
    public boolean hasDay() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'day' field.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.openingHours.Builder clearDay() {
      day = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'openTimeHours' field.
      * @return The value.
      */
    public java.lang.CharSequence getOpenTimeHours() {
      return openTimeHours;
    }

    /**
      * Sets the value of the 'openTimeHours' field.
      * @param value The value of 'openTimeHours'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.openingHours.Builder setOpenTimeHours(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.openTimeHours = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'openTimeHours' field has been set.
      * @return True if the 'openTimeHours' field has been set, false otherwise.
      */
    public boolean hasOpenTimeHours() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'openTimeHours' field.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.openingHours.Builder clearOpenTimeHours() {
      openTimeHours = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'openTimeMinutes' field.
      * @return The value.
      */
    public java.lang.CharSequence getOpenTimeMinutes() {
      return openTimeMinutes;
    }

    /**
      * Sets the value of the 'openTimeMinutes' field.
      * @param value The value of 'openTimeMinutes'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.openingHours.Builder setOpenTimeMinutes(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.openTimeMinutes = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'openTimeMinutes' field has been set.
      * @return True if the 'openTimeMinutes' field has been set, false otherwise.
      */
    public boolean hasOpenTimeMinutes() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'openTimeMinutes' field.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.openingHours.Builder clearOpenTimeMinutes() {
      openTimeMinutes = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'closeTimeHours' field.
      * @return The value.
      */
    public java.lang.CharSequence getCloseTimeHours() {
      return closeTimeHours;
    }

    /**
      * Sets the value of the 'closeTimeHours' field.
      * @param value The value of 'closeTimeHours'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.openingHours.Builder setCloseTimeHours(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.closeTimeHours = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'closeTimeHours' field has been set.
      * @return True if the 'closeTimeHours' field has been set, false otherwise.
      */
    public boolean hasCloseTimeHours() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'closeTimeHours' field.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.openingHours.Builder clearCloseTimeHours() {
      closeTimeHours = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'closeTimeMinutes' field.
      * @return The value.
      */
    public java.lang.CharSequence getCloseTimeMinutes() {
      return closeTimeMinutes;
    }

    /**
      * Sets the value of the 'closeTimeMinutes' field.
      * @param value The value of 'closeTimeMinutes'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.openingHours.Builder setCloseTimeMinutes(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.closeTimeMinutes = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'closeTimeMinutes' field has been set.
      * @return True if the 'closeTimeMinutes' field has been set, false otherwise.
      */
    public boolean hasCloseTimeMinutes() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'closeTimeMinutes' field.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.openingHours.Builder clearCloseTimeMinutes() {
      closeTimeMinutes = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public openingHours build() {
      try {
        openingHours record = new openingHours();
        record.day = fieldSetFlags()[0] ? this.day : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.openTimeHours = fieldSetFlags()[1] ? this.openTimeHours : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.openTimeMinutes = fieldSetFlags()[2] ? this.openTimeMinutes : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.closeTimeHours = fieldSetFlags()[3] ? this.closeTimeHours : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.closeTimeMinutes = fieldSetFlags()[4] ? this.closeTimeMinutes : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<openingHours>
    WRITER$ = (org.apache.avro.io.DatumWriter<openingHours>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<openingHours>
    READER$ = (org.apache.avro.io.DatumReader<openingHours>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
