/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.maersk.facility.smds.operations.MSK;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Facility Contact Details */
@org.apache.avro.specific.AvroGenerated
public class contactDetails extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6887510348570412318L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"contactDetails\",\"namespace\":\"com.maersk.facility.smds.operations.MSK\",\"doc\":\"Facility Contact Details\",\"fields\":[{\"name\":\"firstName\",\"type\":[\"null\",\"string\"]},{\"name\":\"lastName\",\"type\":[\"null\",\"string\"]},{\"name\":\"jobTitle\",\"type\":[\"null\",\"string\"]},{\"name\":\"department\",\"type\":[\"null\",\"string\"]},{\"name\":\"internationalDialingCdPhone\",\"type\":[\"null\",\"string\"]},{\"name\":\"extension\",\"type\":[\"null\",\"string\"]},{\"name\":\"phoneNumber\",\"type\":[\"null\",\"string\"]},{\"name\":\"internationalDialingCdMobile\",\"type\":[\"null\",\"string\"]},{\"name\":\"mobileNumber\",\"type\":[\"null\",\"string\"]},{\"name\":\"internaltionalDialingCodeFax\",\"type\":[\"null\",\"string\"]},{\"name\":\"faxNumber\",\"type\":[\"null\",\"string\"]},{\"name\":\"emailAddress\",\"type\":[\"null\",\"string\"]},{\"name\":\"validThroughDate\",\"type\":[\"null\",\"long\"],\"logicalType\":\"timestamp-millis\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<contactDetails> ENCODER =
      new BinaryMessageEncoder<contactDetails>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<contactDetails> DECODER =
      new BinaryMessageDecoder<contactDetails>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<contactDetails> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<contactDetails> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<contactDetails>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this contactDetails to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a contactDetails from a ByteBuffer. */
  public static contactDetails fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence firstName;
  @Deprecated public java.lang.CharSequence lastName;
  @Deprecated public java.lang.CharSequence jobTitle;
  @Deprecated public java.lang.CharSequence department;
  @Deprecated public java.lang.CharSequence internationalDialingCdPhone;
  @Deprecated public java.lang.CharSequence extension;
  @Deprecated public java.lang.CharSequence phoneNumber;
  @Deprecated public java.lang.CharSequence internationalDialingCdMobile;
  @Deprecated public java.lang.CharSequence mobileNumber;
  @Deprecated public java.lang.CharSequence internaltionalDialingCodeFax;
  @Deprecated public java.lang.CharSequence faxNumber;
  @Deprecated public java.lang.CharSequence emailAddress;
  @Deprecated public java.lang.Long validThroughDate;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public contactDetails() {}

  /**
   * All-args constructor.
   * @param firstName The new value for firstName
   * @param lastName The new value for lastName
   * @param jobTitle The new value for jobTitle
   * @param department The new value for department
   * @param internationalDialingCdPhone The new value for internationalDialingCdPhone
   * @param extension The new value for extension
   * @param phoneNumber The new value for phoneNumber
   * @param internationalDialingCdMobile The new value for internationalDialingCdMobile
   * @param mobileNumber The new value for mobileNumber
   * @param internaltionalDialingCodeFax The new value for internaltionalDialingCodeFax
   * @param faxNumber The new value for faxNumber
   * @param emailAddress The new value for emailAddress
   * @param validThroughDate The new value for validThroughDate
   */
  public contactDetails(java.lang.CharSequence firstName, java.lang.CharSequence lastName, java.lang.CharSequence jobTitle, java.lang.CharSequence department, java.lang.CharSequence internationalDialingCdPhone, java.lang.CharSequence extension, java.lang.CharSequence phoneNumber, java.lang.CharSequence internationalDialingCdMobile, java.lang.CharSequence mobileNumber, java.lang.CharSequence internaltionalDialingCodeFax, java.lang.CharSequence faxNumber, java.lang.CharSequence emailAddress, java.lang.Long validThroughDate) {
    this.firstName = firstName;
    this.lastName = lastName;
    this.jobTitle = jobTitle;
    this.department = department;
    this.internationalDialingCdPhone = internationalDialingCdPhone;
    this.extension = extension;
    this.phoneNumber = phoneNumber;
    this.internationalDialingCdMobile = internationalDialingCdMobile;
    this.mobileNumber = mobileNumber;
    this.internaltionalDialingCodeFax = internaltionalDialingCodeFax;
    this.faxNumber = faxNumber;
    this.emailAddress = emailAddress;
    this.validThroughDate = validThroughDate;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return firstName;
    case 1: return lastName;
    case 2: return jobTitle;
    case 3: return department;
    case 4: return internationalDialingCdPhone;
    case 5: return extension;
    case 6: return phoneNumber;
    case 7: return internationalDialingCdMobile;
    case 8: return mobileNumber;
    case 9: return internaltionalDialingCodeFax;
    case 10: return faxNumber;
    case 11: return emailAddress;
    case 12: return validThroughDate;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: firstName = (java.lang.CharSequence)value$; break;
    case 1: lastName = (java.lang.CharSequence)value$; break;
    case 2: jobTitle = (java.lang.CharSequence)value$; break;
    case 3: department = (java.lang.CharSequence)value$; break;
    case 4: internationalDialingCdPhone = (java.lang.CharSequence)value$; break;
    case 5: extension = (java.lang.CharSequence)value$; break;
    case 6: phoneNumber = (java.lang.CharSequence)value$; break;
    case 7: internationalDialingCdMobile = (java.lang.CharSequence)value$; break;
    case 8: mobileNumber = (java.lang.CharSequence)value$; break;
    case 9: internaltionalDialingCodeFax = (java.lang.CharSequence)value$; break;
    case 10: faxNumber = (java.lang.CharSequence)value$; break;
    case 11: emailAddress = (java.lang.CharSequence)value$; break;
    case 12: validThroughDate = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'firstName' field.
   * @return The value of the 'firstName' field.
   */
  public java.lang.CharSequence getFirstName() {
    return firstName;
  }

  /**
   * Sets the value of the 'firstName' field.
   * @param value the value to set.
   */
  public void setFirstName(java.lang.CharSequence value) {
    this.firstName = value;
  }

  /**
   * Gets the value of the 'lastName' field.
   * @return The value of the 'lastName' field.
   */
  public java.lang.CharSequence getLastName() {
    return lastName;
  }

  /**
   * Sets the value of the 'lastName' field.
   * @param value the value to set.
   */
  public void setLastName(java.lang.CharSequence value) {
    this.lastName = value;
  }

  /**
   * Gets the value of the 'jobTitle' field.
   * @return The value of the 'jobTitle' field.
   */
  public java.lang.CharSequence getJobTitle() {
    return jobTitle;
  }

  /**
   * Sets the value of the 'jobTitle' field.
   * @param value the value to set.
   */
  public void setJobTitle(java.lang.CharSequence value) {
    this.jobTitle = value;
  }

  /**
   * Gets the value of the 'department' field.
   * @return The value of the 'department' field.
   */
  public java.lang.CharSequence getDepartment() {
    return department;
  }

  /**
   * Sets the value of the 'department' field.
   * @param value the value to set.
   */
  public void setDepartment(java.lang.CharSequence value) {
    this.department = value;
  }

  /**
   * Gets the value of the 'internationalDialingCdPhone' field.
   * @return The value of the 'internationalDialingCdPhone' field.
   */
  public java.lang.CharSequence getInternationalDialingCdPhone() {
    return internationalDialingCdPhone;
  }

  /**
   * Sets the value of the 'internationalDialingCdPhone' field.
   * @param value the value to set.
   */
  public void setInternationalDialingCdPhone(java.lang.CharSequence value) {
    this.internationalDialingCdPhone = value;
  }

  /**
   * Gets the value of the 'extension' field.
   * @return The value of the 'extension' field.
   */
  public java.lang.CharSequence getExtension() {
    return extension;
  }

  /**
   * Sets the value of the 'extension' field.
   * @param value the value to set.
   */
  public void setExtension(java.lang.CharSequence value) {
    this.extension = value;
  }

  /**
   * Gets the value of the 'phoneNumber' field.
   * @return The value of the 'phoneNumber' field.
   */
  public java.lang.CharSequence getPhoneNumber() {
    return phoneNumber;
  }

  /**
   * Sets the value of the 'phoneNumber' field.
   * @param value the value to set.
   */
  public void setPhoneNumber(java.lang.CharSequence value) {
    this.phoneNumber = value;
  }

  /**
   * Gets the value of the 'internationalDialingCdMobile' field.
   * @return The value of the 'internationalDialingCdMobile' field.
   */
  public java.lang.CharSequence getInternationalDialingCdMobile() {
    return internationalDialingCdMobile;
  }

  /**
   * Sets the value of the 'internationalDialingCdMobile' field.
   * @param value the value to set.
   */
  public void setInternationalDialingCdMobile(java.lang.CharSequence value) {
    this.internationalDialingCdMobile = value;
  }

  /**
   * Gets the value of the 'mobileNumber' field.
   * @return The value of the 'mobileNumber' field.
   */
  public java.lang.CharSequence getMobileNumber() {
    return mobileNumber;
  }

  /**
   * Sets the value of the 'mobileNumber' field.
   * @param value the value to set.
   */
  public void setMobileNumber(java.lang.CharSequence value) {
    this.mobileNumber = value;
  }

  /**
   * Gets the value of the 'internaltionalDialingCodeFax' field.
   * @return The value of the 'internaltionalDialingCodeFax' field.
   */
  public java.lang.CharSequence getInternaltionalDialingCodeFax() {
    return internaltionalDialingCodeFax;
  }

  /**
   * Sets the value of the 'internaltionalDialingCodeFax' field.
   * @param value the value to set.
   */
  public void setInternaltionalDialingCodeFax(java.lang.CharSequence value) {
    this.internaltionalDialingCodeFax = value;
  }

  /**
   * Gets the value of the 'faxNumber' field.
   * @return The value of the 'faxNumber' field.
   */
  public java.lang.CharSequence getFaxNumber() {
    return faxNumber;
  }

  /**
   * Sets the value of the 'faxNumber' field.
   * @param value the value to set.
   */
  public void setFaxNumber(java.lang.CharSequence value) {
    this.faxNumber = value;
  }

  /**
   * Gets the value of the 'emailAddress' field.
   * @return The value of the 'emailAddress' field.
   */
  public java.lang.CharSequence getEmailAddress() {
    return emailAddress;
  }

  /**
   * Sets the value of the 'emailAddress' field.
   * @param value the value to set.
   */
  public void setEmailAddress(java.lang.CharSequence value) {
    this.emailAddress = value;
  }

  /**
   * Gets the value of the 'validThroughDate' field.
   * @return The value of the 'validThroughDate' field.
   */
  public java.lang.Long getValidThroughDate() {
    return validThroughDate;
  }

  /**
   * Sets the value of the 'validThroughDate' field.
   * @param value the value to set.
   */
  public void setValidThroughDate(java.lang.Long value) {
    this.validThroughDate = value;
  }

  /**
   * Creates a new contactDetails RecordBuilder.
   * @return A new contactDetails RecordBuilder
   */
  public static com.maersk.facility.smds.operations.MSK.contactDetails.Builder newBuilder() {
    return new com.maersk.facility.smds.operations.MSK.contactDetails.Builder();
  }

  /**
   * Creates a new contactDetails RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new contactDetails RecordBuilder
   */
  public static com.maersk.facility.smds.operations.MSK.contactDetails.Builder newBuilder(com.maersk.facility.smds.operations.MSK.contactDetails.Builder other) {
    return new com.maersk.facility.smds.operations.MSK.contactDetails.Builder(other);
  }

  /**
   * Creates a new contactDetails RecordBuilder by copying an existing contactDetails instance.
   * @param other The existing instance to copy.
   * @return A new contactDetails RecordBuilder
   */
  public static com.maersk.facility.smds.operations.MSK.contactDetails.Builder newBuilder(com.maersk.facility.smds.operations.MSK.contactDetails other) {
    return new com.maersk.facility.smds.operations.MSK.contactDetails.Builder(other);
  }

  /**
   * RecordBuilder for contactDetails instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<contactDetails>
    implements org.apache.avro.data.RecordBuilder<contactDetails> {

    private java.lang.CharSequence firstName;
    private java.lang.CharSequence lastName;
    private java.lang.CharSequence jobTitle;
    private java.lang.CharSequence department;
    private java.lang.CharSequence internationalDialingCdPhone;
    private java.lang.CharSequence extension;
    private java.lang.CharSequence phoneNumber;
    private java.lang.CharSequence internationalDialingCdMobile;
    private java.lang.CharSequence mobileNumber;
    private java.lang.CharSequence internaltionalDialingCodeFax;
    private java.lang.CharSequence faxNumber;
    private java.lang.CharSequence emailAddress;
    private java.lang.Long validThroughDate;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.maersk.facility.smds.operations.MSK.contactDetails.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.firstName)) {
        this.firstName = data().deepCopy(fields()[0].schema(), other.firstName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.lastName)) {
        this.lastName = data().deepCopy(fields()[1].schema(), other.lastName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.jobTitle)) {
        this.jobTitle = data().deepCopy(fields()[2].schema(), other.jobTitle);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.department)) {
        this.department = data().deepCopy(fields()[3].schema(), other.department);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.internationalDialingCdPhone)) {
        this.internationalDialingCdPhone = data().deepCopy(fields()[4].schema(), other.internationalDialingCdPhone);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.extension)) {
        this.extension = data().deepCopy(fields()[5].schema(), other.extension);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.phoneNumber)) {
        this.phoneNumber = data().deepCopy(fields()[6].schema(), other.phoneNumber);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.internationalDialingCdMobile)) {
        this.internationalDialingCdMobile = data().deepCopy(fields()[7].schema(), other.internationalDialingCdMobile);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.mobileNumber)) {
        this.mobileNumber = data().deepCopy(fields()[8].schema(), other.mobileNumber);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.internaltionalDialingCodeFax)) {
        this.internaltionalDialingCodeFax = data().deepCopy(fields()[9].schema(), other.internaltionalDialingCodeFax);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.faxNumber)) {
        this.faxNumber = data().deepCopy(fields()[10].schema(), other.faxNumber);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.emailAddress)) {
        this.emailAddress = data().deepCopy(fields()[11].schema(), other.emailAddress);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.validThroughDate)) {
        this.validThroughDate = data().deepCopy(fields()[12].schema(), other.validThroughDate);
        fieldSetFlags()[12] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing contactDetails instance
     * @param other The existing instance to copy.
     */
    private Builder(com.maersk.facility.smds.operations.MSK.contactDetails other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.firstName)) {
        this.firstName = data().deepCopy(fields()[0].schema(), other.firstName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.lastName)) {
        this.lastName = data().deepCopy(fields()[1].schema(), other.lastName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.jobTitle)) {
        this.jobTitle = data().deepCopy(fields()[2].schema(), other.jobTitle);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.department)) {
        this.department = data().deepCopy(fields()[3].schema(), other.department);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.internationalDialingCdPhone)) {
        this.internationalDialingCdPhone = data().deepCopy(fields()[4].schema(), other.internationalDialingCdPhone);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.extension)) {
        this.extension = data().deepCopy(fields()[5].schema(), other.extension);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.phoneNumber)) {
        this.phoneNumber = data().deepCopy(fields()[6].schema(), other.phoneNumber);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.internationalDialingCdMobile)) {
        this.internationalDialingCdMobile = data().deepCopy(fields()[7].schema(), other.internationalDialingCdMobile);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.mobileNumber)) {
        this.mobileNumber = data().deepCopy(fields()[8].schema(), other.mobileNumber);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.internaltionalDialingCodeFax)) {
        this.internaltionalDialingCodeFax = data().deepCopy(fields()[9].schema(), other.internaltionalDialingCodeFax);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.faxNumber)) {
        this.faxNumber = data().deepCopy(fields()[10].schema(), other.faxNumber);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.emailAddress)) {
        this.emailAddress = data().deepCopy(fields()[11].schema(), other.emailAddress);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.validThroughDate)) {
        this.validThroughDate = data().deepCopy(fields()[12].schema(), other.validThroughDate);
        fieldSetFlags()[12] = true;
      }
    }

    /**
      * Gets the value of the 'firstName' field.
      * @return The value.
      */
    public java.lang.CharSequence getFirstName() {
      return firstName;
    }

    /**
      * Sets the value of the 'firstName' field.
      * @param value The value of 'firstName'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.contactDetails.Builder setFirstName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.firstName = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'firstName' field has been set.
      * @return True if the 'firstName' field has been set, false otherwise.
      */
    public boolean hasFirstName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'firstName' field.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.contactDetails.Builder clearFirstName() {
      firstName = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastName' field.
      * @return The value.
      */
    public java.lang.CharSequence getLastName() {
      return lastName;
    }

    /**
      * Sets the value of the 'lastName' field.
      * @param value The value of 'lastName'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.contactDetails.Builder setLastName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.lastName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'lastName' field has been set.
      * @return True if the 'lastName' field has been set, false otherwise.
      */
    public boolean hasLastName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'lastName' field.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.contactDetails.Builder clearLastName() {
      lastName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'jobTitle' field.
      * @return The value.
      */
    public java.lang.CharSequence getJobTitle() {
      return jobTitle;
    }

    /**
      * Sets the value of the 'jobTitle' field.
      * @param value The value of 'jobTitle'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.contactDetails.Builder setJobTitle(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.jobTitle = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'jobTitle' field has been set.
      * @return True if the 'jobTitle' field has been set, false otherwise.
      */
    public boolean hasJobTitle() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'jobTitle' field.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.contactDetails.Builder clearJobTitle() {
      jobTitle = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'department' field.
      * @return The value.
      */
    public java.lang.CharSequence getDepartment() {
      return department;
    }

    /**
      * Sets the value of the 'department' field.
      * @param value The value of 'department'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.contactDetails.Builder setDepartment(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.department = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'department' field has been set.
      * @return True if the 'department' field has been set, false otherwise.
      */
    public boolean hasDepartment() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'department' field.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.contactDetails.Builder clearDepartment() {
      department = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'internationalDialingCdPhone' field.
      * @return The value.
      */
    public java.lang.CharSequence getInternationalDialingCdPhone() {
      return internationalDialingCdPhone;
    }

    /**
      * Sets the value of the 'internationalDialingCdPhone' field.
      * @param value The value of 'internationalDialingCdPhone'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.contactDetails.Builder setInternationalDialingCdPhone(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.internationalDialingCdPhone = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'internationalDialingCdPhone' field has been set.
      * @return True if the 'internationalDialingCdPhone' field has been set, false otherwise.
      */
    public boolean hasInternationalDialingCdPhone() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'internationalDialingCdPhone' field.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.contactDetails.Builder clearInternationalDialingCdPhone() {
      internationalDialingCdPhone = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'extension' field.
      * @return The value.
      */
    public java.lang.CharSequence getExtension() {
      return extension;
    }

    /**
      * Sets the value of the 'extension' field.
      * @param value The value of 'extension'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.contactDetails.Builder setExtension(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.extension = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'extension' field has been set.
      * @return True if the 'extension' field has been set, false otherwise.
      */
    public boolean hasExtension() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'extension' field.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.contactDetails.Builder clearExtension() {
      extension = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'phoneNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getPhoneNumber() {
      return phoneNumber;
    }

    /**
      * Sets the value of the 'phoneNumber' field.
      * @param value The value of 'phoneNumber'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.contactDetails.Builder setPhoneNumber(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.phoneNumber = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'phoneNumber' field has been set.
      * @return True if the 'phoneNumber' field has been set, false otherwise.
      */
    public boolean hasPhoneNumber() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'phoneNumber' field.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.contactDetails.Builder clearPhoneNumber() {
      phoneNumber = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'internationalDialingCdMobile' field.
      * @return The value.
      */
    public java.lang.CharSequence getInternationalDialingCdMobile() {
      return internationalDialingCdMobile;
    }

    /**
      * Sets the value of the 'internationalDialingCdMobile' field.
      * @param value The value of 'internationalDialingCdMobile'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.contactDetails.Builder setInternationalDialingCdMobile(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.internationalDialingCdMobile = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'internationalDialingCdMobile' field has been set.
      * @return True if the 'internationalDialingCdMobile' field has been set, false otherwise.
      */
    public boolean hasInternationalDialingCdMobile() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'internationalDialingCdMobile' field.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.contactDetails.Builder clearInternationalDialingCdMobile() {
      internationalDialingCdMobile = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'mobileNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getMobileNumber() {
      return mobileNumber;
    }

    /**
      * Sets the value of the 'mobileNumber' field.
      * @param value The value of 'mobileNumber'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.contactDetails.Builder setMobileNumber(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.mobileNumber = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'mobileNumber' field has been set.
      * @return True if the 'mobileNumber' field has been set, false otherwise.
      */
    public boolean hasMobileNumber() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'mobileNumber' field.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.contactDetails.Builder clearMobileNumber() {
      mobileNumber = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'internaltionalDialingCodeFax' field.
      * @return The value.
      */
    public java.lang.CharSequence getInternaltionalDialingCodeFax() {
      return internaltionalDialingCodeFax;
    }

    /**
      * Sets the value of the 'internaltionalDialingCodeFax' field.
      * @param value The value of 'internaltionalDialingCodeFax'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.contactDetails.Builder setInternaltionalDialingCodeFax(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.internaltionalDialingCodeFax = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'internaltionalDialingCodeFax' field has been set.
      * @return True if the 'internaltionalDialingCodeFax' field has been set, false otherwise.
      */
    public boolean hasInternaltionalDialingCodeFax() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'internaltionalDialingCodeFax' field.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.contactDetails.Builder clearInternaltionalDialingCodeFax() {
      internaltionalDialingCodeFax = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'faxNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getFaxNumber() {
      return faxNumber;
    }

    /**
      * Sets the value of the 'faxNumber' field.
      * @param value The value of 'faxNumber'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.contactDetails.Builder setFaxNumber(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.faxNumber = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'faxNumber' field has been set.
      * @return True if the 'faxNumber' field has been set, false otherwise.
      */
    public boolean hasFaxNumber() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'faxNumber' field.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.contactDetails.Builder clearFaxNumber() {
      faxNumber = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'emailAddress' field.
      * @return The value.
      */
    public java.lang.CharSequence getEmailAddress() {
      return emailAddress;
    }

    /**
      * Sets the value of the 'emailAddress' field.
      * @param value The value of 'emailAddress'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.contactDetails.Builder setEmailAddress(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.emailAddress = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'emailAddress' field has been set.
      * @return True if the 'emailAddress' field has been set, false otherwise.
      */
    public boolean hasEmailAddress() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'emailAddress' field.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.contactDetails.Builder clearEmailAddress() {
      emailAddress = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'validThroughDate' field.
      * @return The value.
      */
    public java.lang.Long getValidThroughDate() {
      return validThroughDate;
    }

    /**
      * Sets the value of the 'validThroughDate' field.
      * @param value The value of 'validThroughDate'.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.contactDetails.Builder setValidThroughDate(java.lang.Long value) {
      validate(fields()[12], value);
      this.validThroughDate = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'validThroughDate' field has been set.
      * @return True if the 'validThroughDate' field has been set, false otherwise.
      */
    public boolean hasValidThroughDate() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'validThroughDate' field.
      * @return This builder.
      */
    public com.maersk.facility.smds.operations.MSK.contactDetails.Builder clearValidThroughDate() {
      validThroughDate = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public contactDetails build() {
      try {
        contactDetails record = new contactDetails();
        record.firstName = fieldSetFlags()[0] ? this.firstName : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.lastName = fieldSetFlags()[1] ? this.lastName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.jobTitle = fieldSetFlags()[2] ? this.jobTitle : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.department = fieldSetFlags()[3] ? this.department : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.internationalDialingCdPhone = fieldSetFlags()[4] ? this.internationalDialingCdPhone : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.extension = fieldSetFlags()[5] ? this.extension : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.phoneNumber = fieldSetFlags()[6] ? this.phoneNumber : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.internationalDialingCdMobile = fieldSetFlags()[7] ? this.internationalDialingCdMobile : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.mobileNumber = fieldSetFlags()[8] ? this.mobileNumber : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.internaltionalDialingCodeFax = fieldSetFlags()[9] ? this.internaltionalDialingCodeFax : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.faxNumber = fieldSetFlags()[10] ? this.faxNumber : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.emailAddress = fieldSetFlags()[11] ? this.emailAddress : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.validThroughDate = fieldSetFlags()[12] ? this.validThroughDate : (java.lang.Long) defaultValue(fields()[12]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<contactDetails>
    WRITER$ = (org.apache.avro.io.DatumWriter<contactDetails>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<contactDetails>
    READER$ = (org.apache.avro.io.DatumReader<contactDetails>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
