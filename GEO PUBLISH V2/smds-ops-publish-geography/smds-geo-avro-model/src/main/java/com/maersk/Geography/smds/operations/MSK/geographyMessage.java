/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.maersk.Geography.smds.operations.MSK;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** The generic avro schema used by publishers to publish events to the enterprise streaming service for Geography interface */
@org.apache.avro.specific.AvroGenerated
public class geographyMessage extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8314129374239760379L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"geographyMessage\",\"namespace\":\"com.maersk.Geography.smds.operations.MSK\",\"doc\":\"The generic avro schema used by publishers to publish events to the enterprise streaming service for Geography interface\",\"fields\":[{\"name\":\"geography\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"geography\",\"doc\":\"Geography Entity Information Which includes AltNm,AltCd,fence,Country,Parent,BDA and BDALoc \",\"fields\":[{\"name\":\"geoType\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"status\",\"type\":\"string\"},{\"name\":\"validFrom\",\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},{\"name\":\"validTo\",\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},{\"name\":\"longitude\",\"type\":[\"null\",\"string\"]},{\"name\":\"latitude\",\"type\":[\"null\",\"string\"]},{\"name\":\"timeZone\",\"type\":[\"null\",\"string\"]},{\"name\":\"daylightSavingTime\",\"type\":[\"null\",\"string\"]},{\"name\":\"utcOffsetMinutes\",\"type\":[\"null\",\"string\"]},{\"name\":\"daylightSavingStart\",\"type\":[\"null\",\"long\"],\"logicalType\":\"timestamp-millis\"},{\"name\":\"daylightSavingEnd\",\"type\":[\"null\",\"long\"],\"logicalType\":\"timestamp-millis\"},{\"name\":\"daylightSavingShiftMinutes\",\"type\":[\"null\",\"string\"]},{\"name\":\"description\",\"type\":[\"null\",\"string\"]},{\"name\":\"workaroundReason\",\"type\":[\"null\",\"string\"]},{\"name\":\"restricted\",\"type\":[\"null\",\"string\"]},{\"name\":\"postalCodeMandatoryFlag\",\"type\":[\"null\",\"string\"]},{\"name\":\"stateProvienceMandatory\",\"type\":[\"null\",\"string\"]},{\"name\":\"dialingCode\",\"type\":[\"null\",\"string\"]},{\"name\":\"dialingCodedescription\",\"type\":[\"null\",\"string\"]},{\"name\":\"portFlag\",\"type\":[\"null\",\"string\"]},{\"name\":\"olsonTimezone\",\"type\":[\"null\",\"string\"]},{\"name\":\"bdaType\",\"type\":[\"null\",\"string\"]},{\"name\":\"hsudName\",\"type\":[\"null\",\"string\"]},{\"name\":\"alternateNames\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"alternateNames\",\"doc\":\"AlternateNames Details\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",\"string\"]},{\"name\":\"description\",\"type\":[\"null\",\"string\"]},{\"name\":\"status\",\"type\":[\"null\",\"string\"]}]}}]},{\"name\":\"alternateCodes\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"alternateCodes\",\"doc\":\"AlternateCodes Details\",\"fields\":[{\"name\":\"codeType\",\"type\":[\"null\",\"string\"]},{\"name\":\"code\",\"type\":[\"null\",\"string\"]}]}}},{\"name\":\"country\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"country\",\"doc\":\"Country Details\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",\"string\"]},{\"name\":\"type\",\"type\":[\"null\",\"string\"]},{\"name\":\"alternateCodes\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"countryAlternateCodes\",\"doc\":\"Country AlternateCode Details\",\"fields\":[{\"name\":\"codeType\",\"type\":[\"null\",\"string\"]},{\"name\":\"code\",\"type\":[\"null\",\"string\"]}]}}]}]}}]},{\"name\":\"parent\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"parent\",\"doc\":\"Parent Details\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",\"string\"]},{\"name\":\"type\",\"type\":[\"null\",\"string\"]},{\"name\":\"bdaType\",\"type\":[\"null\",\"string\"]},{\"name\":\"alternateCodes\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"parentAlternateCode\",\"doc\":\"Parent AlternateCode details\",\"fields\":[{\"name\":\"codeType\",\"type\":[\"null\",\"string\"]},{\"name\":\"code\",\"type\":[\"null\",\"string\"]}]}}]}]}}]},{\"name\":\"subCityParent\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"subCityParent\",\"doc\":\"SubCityParent details\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",\"string\"]},{\"name\":\"type\",\"type\":[\"null\",\"string\"]},{\"name\":\"bdaType\",\"type\":[\"null\",\"string\"]},{\"name\":\"alternateCodes\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"subCityParentAlternateCode\",\"doc\":\"SubCityParent AlternateCode details\",\"fields\":[{\"name\":\"codeType\",\"type\":[\"null\",\"string\"]},{\"name\":\"code\",\"type\":[\"null\",\"string\"]}]}}]}]}}]},{\"name\":\"bda\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"bda\",\"doc\":\"BDA Details\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",\"string\"]},{\"name\":\"type\",\"type\":[\"null\",\"string\"]},{\"name\":\"bdaType\",\"type\":[\"null\",\"string\"]},{\"name\":\"alternateCodes\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"bdaAlternateCode\",\"doc\":\"BDA AlternateCode details\",\"fields\":[{\"name\":\"codeType\",\"type\":[\"null\",\"string\"]},{\"name\":\"code\",\"type\":[\"null\",\"string\"]}]}}]}]}}]},{\"name\":\"bdaLocations\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"bdaLocation\",\"doc\":\"BDA Location Details\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",\"string\"]},{\"name\":\"type\",\"type\":[\"null\",\"string\"]},{\"name\":\"status\",\"type\":[\"null\",\"string\"]},{\"name\":\"alternateCodes\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"bdaLocationAlternateCode\",\"doc\":\"BDALocation AlternateCode Details\",\"fields\":[{\"name\":\"codeType\",\"type\":[\"null\",\"string\"]},{\"name\":\"code\",\"type\":[\"null\",\"string\"]}]}}]}]}}]}]}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<geographyMessage> ENCODER =
      new BinaryMessageEncoder<geographyMessage>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<geographyMessage> DECODER =
      new BinaryMessageDecoder<geographyMessage>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<geographyMessage> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<geographyMessage> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<geographyMessage>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this geographyMessage to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a geographyMessage from a ByteBuffer. */
  public static geographyMessage fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public com.maersk.Geography.smds.operations.MSK.geography geography;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public geographyMessage() {}

  /**
   * All-args constructor.
   * @param geography The new value for geography
   */
  public geographyMessage(com.maersk.Geography.smds.operations.MSK.geography geography) {
    this.geography = geography;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return geography;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: geography = (com.maersk.Geography.smds.operations.MSK.geography)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'geography' field.
   * @return The value of the 'geography' field.
   */
  public com.maersk.Geography.smds.operations.MSK.geography getGeography() {
    return geography;
  }

  /**
   * Sets the value of the 'geography' field.
   * @param value the value to set.
   */
  public void setGeography(com.maersk.Geography.smds.operations.MSK.geography value) {
    this.geography = value;
  }

  /**
   * Creates a new geographyMessage RecordBuilder.
   * @return A new geographyMessage RecordBuilder
   */
  public static com.maersk.Geography.smds.operations.MSK.geographyMessage.Builder newBuilder() {
    return new com.maersk.Geography.smds.operations.MSK.geographyMessage.Builder();
  }

  /**
   * Creates a new geographyMessage RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new geographyMessage RecordBuilder
   */
  public static com.maersk.Geography.smds.operations.MSK.geographyMessage.Builder newBuilder(com.maersk.Geography.smds.operations.MSK.geographyMessage.Builder other) {
    return new com.maersk.Geography.smds.operations.MSK.geographyMessage.Builder(other);
  }

  /**
   * Creates a new geographyMessage RecordBuilder by copying an existing geographyMessage instance.
   * @param other The existing instance to copy.
   * @return A new geographyMessage RecordBuilder
   */
  public static com.maersk.Geography.smds.operations.MSK.geographyMessage.Builder newBuilder(com.maersk.Geography.smds.operations.MSK.geographyMessage other) {
    return new com.maersk.Geography.smds.operations.MSK.geographyMessage.Builder(other);
  }

  /**
   * RecordBuilder for geographyMessage instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<geographyMessage>
    implements org.apache.avro.data.RecordBuilder<geographyMessage> {

    private com.maersk.Geography.smds.operations.MSK.geography geography;
    private com.maersk.Geography.smds.operations.MSK.geography.Builder geographyBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.maersk.Geography.smds.operations.MSK.geographyMessage.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.geography)) {
        this.geography = data().deepCopy(fields()[0].schema(), other.geography);
        fieldSetFlags()[0] = true;
      }
      if (other.hasGeographyBuilder()) {
        this.geographyBuilder = com.maersk.Geography.smds.operations.MSK.geography.newBuilder(other.getGeographyBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing geographyMessage instance
     * @param other The existing instance to copy.
     */
    private Builder(com.maersk.Geography.smds.operations.MSK.geographyMessage other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.geography)) {
        this.geography = data().deepCopy(fields()[0].schema(), other.geography);
        fieldSetFlags()[0] = true;
      }
      this.geographyBuilder = null;
    }

    /**
      * Gets the value of the 'geography' field.
      * @return The value.
      */
    public com.maersk.Geography.smds.operations.MSK.geography getGeography() {
      return geography;
    }

    /**
      * Sets the value of the 'geography' field.
      * @param value The value of 'geography'.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.geographyMessage.Builder setGeography(com.maersk.Geography.smds.operations.MSK.geography value) {
      validate(fields()[0], value);
      this.geographyBuilder = null;
      this.geography = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'geography' field has been set.
      * @return True if the 'geography' field has been set, false otherwise.
      */
    public boolean hasGeography() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'geography' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.maersk.Geography.smds.operations.MSK.geography.Builder getGeographyBuilder() {
      if (geographyBuilder == null) {
        if (hasGeography()) {
          setGeographyBuilder(com.maersk.Geography.smds.operations.MSK.geography.newBuilder(geography));
        } else {
          setGeographyBuilder(com.maersk.Geography.smds.operations.MSK.geography.newBuilder());
        }
      }
      return geographyBuilder;
    }

    /**
     * Sets the Builder instance for the 'geography' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.maersk.Geography.smds.operations.MSK.geographyMessage.Builder setGeographyBuilder(com.maersk.Geography.smds.operations.MSK.geography.Builder value) {
      clearGeography();
      geographyBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'geography' field has an active Builder instance
     * @return True if the 'geography' field has an active Builder instance
     */
    public boolean hasGeographyBuilder() {
      return geographyBuilder != null;
    }

    /**
      * Clears the value of the 'geography' field.
      * @return This builder.
      */
    public com.maersk.Geography.smds.operations.MSK.geographyMessage.Builder clearGeography() {
      geography = null;
      geographyBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public geographyMessage build() {
      try {
        geographyMessage record = new geographyMessage();
        if (geographyBuilder != null) {
          record.geography = this.geographyBuilder.build();
        } else {
          record.geography = fieldSetFlags()[0] ? this.geography : (com.maersk.Geography.smds.operations.MSK.geography) defaultValue(fields()[0]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<geographyMessage>
    WRITER$ = (org.apache.avro.io.DatumWriter<geographyMessage>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<geographyMessage>
    READER$ = (org.apache.avro.io.DatumReader<geographyMessage>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
